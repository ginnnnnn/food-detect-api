const handleRegister = (req, res, db, bcrypt) => {
  const { email, password, username } = req.body;
  if (!email || !password || !username) {
    return res.status(400).json("incorrect submit form");
  }

  const hash = bcrypt.hashSync(password);
  db.transaction(trx => {
    db("login")
      .transacting(trx)
      .insert({
        email: email,
        hash: hash
      })
      .returning("email") //returning â€” .returning(column) / .returning([column1, column2, ...])
      .then(userEmail => {
        return db("users")
          .returning("*") // define what we want to return,'id' ['id','email'],'*' all
          .insert({
            username: username,
            email: userEmail[0], //makesure this email is that email all same
            joined: new Date()
          }) //no need to pass id and entries ,it will be automatic generated by db
          .then(userinfo => {
            // console.log(userinfo); //[userInfo]
            res.json(userinfo[0]); //response to browser with returning data as an array
          })
          .then(trx.commit);
      })
      .catch(trx.rollback);
  }).catch(err => res.status(400).json("unable to register"));
}; //dont give client too much info for error

module.exports = {
  handleRegister: handleRegister
};
